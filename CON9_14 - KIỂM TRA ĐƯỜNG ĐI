#include <bits/stdc++.h>

using namespace std;
bool visited[1001];
vector< vector<int> > dsKe(1001);

bool checkBFS(int s, int t){
	queue<int> q;
	q.push(s);
	visited[s] = true;
	while(!q.empty()){
		int u = q.front();
		q.pop();
		for( int x : dsKe[u]){
			if(!visited[x]){
				visited[x] = true;
				q.push(x);
			}
		}
	}
	if(!visited[t]) return false;
	else return true;
}
int main(){
	int t; cin >> t;
	while(t--){
		int v, e; cin >> v >> e;
		dsKe.clear();
		for(int i =0;i<e;i++){
			int x, y; cin >> x >> y;
			dsKe[x].push_back(y);
			dsKe[y].push_back(x);
		}
		int q; cin >> q;
		vector< pair<int,int> > test;
		for(int i =0;i<q;i++){
			int x, y; cin >> x >> y;
			test.push_back({x,y});
		}
		for(auto p:test){
			memset(visited, false, sizeof(visited));
			int x = p.first; int y = p.second;
			if(checkBFS(x,y)) cout << "YES\n";
			else cout << "NO\n";
		}
	}
}
